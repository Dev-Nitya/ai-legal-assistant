AWSTemplateFormatVersion: "2010-09-09"
Description: ECS Fargate Service Stack for AI Legal Assistant

Parameters:
  Environment:
    Type: String
    Default: production
  ClusterName:
    Type: String
    Description: Name of the ECS cluster
  ImageUri:
    Type: String
    Description: Docker image URI in ECR
  AlbTargetGroupArn:              # <-- required now
    Type: String
    Description: Target group ARN for load balancer
  AppSecurityGroupId:
    Type: String
    Description: Security group for ECS tasks
  Subnet1:
    Type: String
    Description: Subnet ID 1 for ECS tasks
  Subnet2:
    Type: String
    Description: Subnet ID 2 for ECS tasks
  InfraStackName:
    Type: String
    Default: ai-legal-assistant-infra
    Description: CloudFormation stack name that exports the DocumentsBucket (used to import bucket name)

Resources:
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Environment}-ecsTaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  AppTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Environment}-app-task-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AppTaskSecretsAndS3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:ai-legal-assistant-*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Join
                    - ""
                    - - "arn:aws:s3:::"
                      - !ImportValue
                          'Fn::Sub': "${InfraStackName}-BucketName"
                  - !Join
                    - ""
                    - - "arn:aws:s3:::"
                      - !ImportValue
                          'Fn::Sub': "${InfraStackName}-BucketName"
                      - "/*"

  AppLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${Environment}-app"
      RetentionInDays: 7

  AppTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${Environment}-app-taskdef"
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt AppTaskRole.Arn
      ContainerDefinitions:
        - Name: app
          Image: !Ref ImageUri
          Essential: true
          PortMappings:
            - ContainerPort: 8000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref AppLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  AppService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub "${Environment}-app-service"
      Cluster: !Ref ClusterName
      TaskDefinition: !Ref AppTaskDefinition
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref AppSecurityGroupId
          Subnets:
            - !Ref Subnet1
            - !Ref Subnet2
      LoadBalancers:                 # <-- always attach ALB/TG
        - ContainerName: app
          ContainerPort: 8000        # <-- matches above
          TargetGroupArn: !Ref AlbTargetGroupArn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50

Outputs:
  ServiceName:
    Description: Name of the ECS Service
    Value: !Ref AppService
  TaskDefinitionArn:
    Description: ARN of the ECS Task Definition
    Value: !Ref AppTaskDefinition
  ExecutionRoleArn:
    Description: ARN of the ECS Task Execution Role
    Value: !GetAtt ECSTaskExecutionRole.Arn
