AWSTemplateFormatVersion: "2010-09-09"
Description: ECS Fargate Service Stack for AI Legal Assistant

Parameters:
  Environment:
    Type: String
    Default: production

  ClusterName:
    Type: String
    Description: Name of the ECS cluster

  ImageUri:
    Type: String
    Description: Docker image URI in ECR

  AlbTargetGroupArn:
    Type: String
    Description: Target group ARN for load balancer
    Default: ""   # ðŸ‘ˆ optional

  AppSecurityGroupId:
    Type: String
    Description: Security group for ECS tasks

  Subnet1:
    Type: String
    Description: Subnet ID 1 for ECS tasks

  Subnet2:
    Type: String
    Description: Subnet ID 2 for ECS tasks

Conditions:
  HasAlbTargetGroup: !Not [!Equals [!Ref AlbTargetGroupArn, ""]]

Resources:
  ###############################################
  # IAM Role for ECS Task Execution
  ###############################################
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Environment}-ecsTaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ###############################################
  # ECS Task Definition
  ###############################################
  AppTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${Environment}-app-taskdef"
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: app
          Image: !Ref ImageUri
          Essential: true
          PortMappings:
            - ContainerPort: 3000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub "/ecs/${Environment}-app"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  ###############################################
  # ECS Service
  ###############################################
  AppService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub "${Environment}-app-service"
      Cluster: !Ref ClusterName
      TaskDefinition: !Ref AppTaskDefinition
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref AppSecurityGroupId
          Subnets:
            - !Ref Subnet1
            - !Ref Subnet2
      # ðŸ‘‡ Conditional Load Balancer
      LoadBalancers: 
        !If 
          - HasAlbTargetGroup
          - 
            - ContainerName: app
              ContainerPort: 3000
              TargetGroupArn: !Ref AlbTargetGroupArn
          - !Ref AWS::NoValue
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
    DependsOn: !If [HasAlbTargetGroup, AppTaskDefinition, !Ref AWS::NoValue]

Outputs:
  ServiceName:
    Description: Name of the ECS Service
    Value: !Ref AppService

  TaskDefinitionArn:
    Description: ARN of the ECS Task Definition
    Value: !Ref AppTaskDefinition

  ExecutionRoleArn:
    Description: ARN of the ECS Task Execution Role
    Value: !GetAtt ECSTaskExecutionRole.Arn
